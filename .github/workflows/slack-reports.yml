name: Automated Slack Reports

on:
  schedule:
    # ÏùºÍ∞Ñ Î≥¥Í≥†ÏÑú - Îß§Ïùº Ïò§Ï†Ñ 9Ïãú (ÌïúÍµ≠ ÏãúÍ∞Ñ)
    - cron: '0 0 * * *'  # UTC 0:00 = KST 9:00
    # Ï£ºÍ∞Ñ Î≥¥Í≥†ÏÑú - Îß§Ï£º ÏõîÏöîÏùº Ïò§Ï†Ñ 9Ïãú (ÌïúÍµ≠ ÏãúÍ∞Ñ)
    - cron: '0 0 * * 1'  # UTC 0:00 Monday = KST 9:00 Monday
    # ÏõîÍ∞Ñ Î≥¥Í≥†ÏÑú - Îß§Ïõî 1Ïùº Ïò§Ï†Ñ 9Ïãú (ÌïúÍµ≠ ÏãúÍ∞Ñ)
    - cron: '0 0 1 * *'  # UTC 0:00 1st = KST 9:00 1st
  workflow_dispatch:
    inputs:
      report_type:
        description: 'Report type to generate'
        required: true
        default: 'daily'
        type: choice
        options:
          - daily
          - weekly
          - monthly

jobs:
  daily-report:
    name: Generate Daily Report
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && contains(github.event.schedule, '0 0 * * *') || github.event_name == 'workflow_dispatch' && github.event.inputs.report_type == 'daily'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Daily Report
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_DM_USER_IDS: ${{ secrets.SLACK_DM_USER_IDS }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TZ: Asia/Seoul
        run: node generate-full-report.js daily

      - name: Log completion
        run: echo "‚úÖ Daily report sent successfully at $(date '+%Y-%m-%d %H:%M:%S KST')"

  weekly-report:
    name: Generate Weekly Report
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && contains(github.event.schedule, '0 0 * * 1') || github.event_name == 'workflow_dispatch' && github.event.inputs.report_type == 'weekly'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Weekly Report
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_DM_USER_IDS: ${{ secrets.SLACK_DM_USER_IDS }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TZ: Asia/Seoul
        run: node generate-full-report.js weekly

      - name: Log completion
        run: echo "‚úÖ Weekly report sent successfully at $(date '+%Y-%m-%d %H:%M:%S KST')"

  monthly-report:
    name: Generate Monthly Report
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && contains(github.event.schedule, '0 0 1 * *') || github.event_name == 'workflow_dispatch' && github.event.inputs.report_type == 'monthly'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Monthly Report
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_DM_USER_IDS: ${{ secrets.SLACK_DM_USER_IDS }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TZ: Asia/Seoul
        run: node generate-full-report.js monthly

      - name: Log completion
        run: echo "‚úÖ Monthly report sent successfully at $(date '+%Y-%m-%d %H:%M:%S KST')"

  test-report:
    name: Test Report Generation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test Grouping Logic
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TZ: Asia/Seoul
        run: |
          echo "üß™ Testing grouping logic..."
          node test-grouping-logic.js daily
          echo "‚úÖ Grouping logic test completed"